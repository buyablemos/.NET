@page "/ratings/create"
@inject LAB7.Components.MoviesDB DB
@using LAB7.Components
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


@attribute [Authorize]


<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Rating</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Rating" OnValidSubmit="AddRating" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="movieid" class="form-label">MovieId:</label> 
                <InputNumber id="movieid" @bind-Value="Rating.MovieId" class="form-control" /> 
                <ValidationMessage For="() => Rating.MovieId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="value" class="form-label">Value:</label> 
                <InputNumber id="value" @bind-Value="Rating.Value" class="form-control" /> 
                <ValidationMessage For="() => Rating.Value" class="text-danger" /> 
            </div>        

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/ratings">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Rating Rating { get; set; } = new();


    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddRating()
    {
        Rating.User = HttpContextAccessor.HttpContext?.User?.Identity?.Name;
        Rating.Date = new DateTime();
        Rating.Date = DateTime.Now;
        DB.DataRating.Add(Rating);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/ratings");
    }
}
